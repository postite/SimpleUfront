<?php

// Generated by Haxe 3.3.0
class ufront_view_FileViewEngine extends ufront_view_UFViewEngine {
	public function __construct($cachingEnabled = null) {
		if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("ufront.view.FileViewEngine::new");
		$__hx__spos = $GLOBALS['%s']->length;
		parent::__construct($cachingEnabled);
		$GLOBALS['%s']->pop();
	}}
	public $scriptDir;
	public $path;
	public $isPathAbsolute;
	public function get_isPathAbsolute() {
		$GLOBALS['%s']->push("ufront.view.FileViewEngine::get_isPathAbsolute");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = StringTools::startsWith($this->path, "/");
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	public $viewDirectory;
	public function get_viewDirectory() {
		$GLOBALS['%s']->push("ufront.view.FileViewEngine::get_viewDirectory");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = $this->get_isPathAbsolute();
		if($tmp) {
			$tmp2 = haxe_io_Path::addTrailingSlash($this->path);
			$GLOBALS['%s']->pop();
			return $tmp2;
		} else {
			$tmp1 = haxe_io_Path::addTrailingSlash($this->scriptDir);
			$tmp2 = haxe_io_Path::addTrailingSlash($this->path);
			{
				$tmp3 = _hx_string_or_null($tmp1) . _hx_string_or_null($tmp2);
				$GLOBALS['%s']->pop();
				return $tmp3;
			}
		}
		$GLOBALS['%s']->pop();
	}
	public function getTemplateString($viewRelativePath) {
		$GLOBALS['%s']->push("ufront.view.FileViewEngine::getTemplateString");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = $this->get_viewDirectory();
		$fullPath = _hx_string_or_null($tmp) . _hx_string_or_null($viewRelativePath);
		try {
			$tmp1 = file_exists($fullPath);
			if($tmp1) {
				$tmp2 = sys_io_File::getContent($fullPath);
				$tmp3 = haxe_ds_Option::Some($tmp2);
				$tmp4 = tink_core_Outcome::Success($tmp3);
				{
					$tmp5 = tink_core__Future_Future_Impl_::sync($tmp4);
					$GLOBALS['%s']->pop();
					return $tmp5;
				}
			} else {
				$tmp5 = tink_core_Outcome::Success(haxe_ds_Option::$None);
				{
					$tmp2 = tink_core__Future_Future_Impl_::sync($tmp5);
					$GLOBALS['%s']->pop();
					return $tmp2;
				}
			}
		}catch(Exception $__hx__e) {
			$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
			$e = $_ex_;
			{
				$GLOBALS['%e'] = (new _hx_array(array()));
				while($GLOBALS['%s']->length >= $__hx__spos) {
					$GLOBALS['%e']->unshift($GLOBALS['%s']->pop());
				}
				$GLOBALS['%s']->push($GLOBALS['%e'][0]);
				$tmp6 = $e->asSurpriseError;
				{
					$tmp2 = call_user_func_array($tmp6, array("Failed to load template " . _hx_string_or_null($viewRelativePath)));
					$GLOBALS['%s']->pop();
					return $tmp2;
				}
			}
		}
		$GLOBALS['%s']->pop();
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static function __meta__() { $args = func_get_args(); return call_user_func_array(self::$__meta__, $args); }
	static $__meta__;
	static $__properties__ = array("get_viewDirectory" => "get_viewDirectory","get_isPathAbsolute" => "get_isPathAbsolute");
	function __toString() { return 'ufront.view.FileViewEngine'; }
}
ufront_view_FileViewEngine::$__meta__ = _hx_anonymous(array("obj" => _hx_anonymous(array("rtti" => (new _hx_array(array((new _hx_array(array("scriptDir", "String", "scriptDirectory"))), (new _hx_array(array("path", "String", "viewPath"))))))))));
