<?php

// Generated by Haxe 3.3.0
class ufront_log_BrowserConsoleLogger implements ufront_app_UFLogHandler{
	public function __construct() { if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("ufront.log.BrowserConsoleLogger::new");
		$__hx__spos = $GLOBALS['%s']->length;
		$GLOBALS['%s']->pop();
	}}
	public function log($ctx, $appMessages) {
		$GLOBALS['%s']->push("ufront.log.BrowserConsoleLogger::log");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = null;
		$tmp1 = $ctx->response->get_contentType();
		if($tmp1 === "text/html") {
			$tmp = !$ctx->response->isRedirect();
		} else {
			$tmp = false;
		}
		if($tmp) {
			$results = (new _hx_array(array()));
			{
				$_g = 0;
				$_g1 = $ctx->messages;
				while($_g < $_g1->length) {
					$msg = $_g1[$_g];
					++$_g;
					$tmp2 = ufront_log_BrowserConsoleLogger::formatMessage($msg);
					$results->push($tmp2);
					unset($tmp2,$msg);
				}
			}
			if($appMessages !== null) {
				$_g2 = 0;
				while($_g2 < $appMessages->length) {
					$msg1 = $appMessages[$_g2];
					++$_g2;
					$tmp3 = ufront_log_BrowserConsoleLogger::formatMessage($msg1);
					$results->push($tmp3);
					unset($tmp3,$msg1);
				}
			}
			$tmp4 = $results->length > 0;
			if($tmp4) {
				$tmp5 = $results->join("\x0A");
				$script = "\x0A<script type=\"text/javascript\">\x0A" . _hx_string_or_null($tmp5) . "\x0A</script>";
				$tmp6 = $ctx->response->getBuffer();
				$newContent = ufront_web_result_CallJavascriptResult::insertScriptsBeforeBodyTag($tmp6, (new _hx_array(array($script))));
				$ctx->response->clearContent();
				$ctx->response->write($newContent);
			}
		}
		{
			$tmp2 = ufront_core_SurpriseTools::success();
			$GLOBALS['%s']->pop();
			return $tmp2;
		}
		$GLOBALS['%s']->pop();
	}
	static function formatMessage($m) {
		$GLOBALS['%s']->push("ufront.log.BrowserConsoleLogger::formatMessage");
		$__hx__spos = $GLOBALS['%s']->length;
		$type = null;
		switch($m->type->index) {
		case 0:{
			$type = "log";
		}break;
		case 1:{
			$type = "info";
		}break;
		case 2:{
			$type = "warn";
		}break;
		case 3:{
			$type = "error";
		}break;
		}
		$extras = null;
		$tmp = null;
		if(_hx_field($m, "pos") !== null) {
			$tmp = $m->pos->customParams !== null;
		} else {
			$tmp = false;
		}
		if($tmp) {
			$tmp1 = $m->pos->customParams->join(", ");
			$extras = ", " . _hx_string_or_null($tmp1);
		} else {
			$extras = "";
		}
		$tmp2 = "" . _hx_string_or_null($m->pos->className) . "." . _hx_string_or_null($m->pos->methodName) . "(" . _hx_string_rec($m->pos->lineNumber, "") . "): ";
		$tmp3 = Std::string($m->msg);
		$msg = _hx_string_or_null($tmp2) . _hx_string_or_null($tmp3) . _hx_string_or_null($extras);
		$tmp4 = "console." . _hx_string_or_null($type) . "(decodeURIComponent(\"";
		$tmp5 = rawurlencode($msg);
		{
			$tmp6 = _hx_string_or_null($tmp4) . _hx_string_or_null($tmp5) . "\"))";
			$GLOBALS['%s']->pop();
			return $tmp6;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'ufront.log.BrowserConsoleLogger'; }
}
