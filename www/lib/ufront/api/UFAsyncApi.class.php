<?php

// Generated by Haxe 3.3.0
class ufront_api_UFAsyncApi {
	public function __construct() {
		if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("ufront.api.UFAsyncApi::new");
		$__hx__spos = $GLOBALS['%s']->length;
		$GLOBALS['%s']->pop();
	}}
	public $className;
	public $api;
	public function _makeApiCall($method, $args, $flags, $pos = null) {
		$GLOBALS['%s']->push("ufront.api.UFAsyncApi::_makeApiCall");
		$__hx__spos = $GLOBALS['%s']->length;
		$_gthis = $this;
		$tmp = "" . _hx_string_or_null($this->className) . "." . _hx_string_or_null($method) . "(";
		$tmp1 = $args->join(",");
		$remotingCallString = _hx_string_or_null($tmp) . _hx_string_or_null($tmp1) . ")";
		$callApi = array(new _hx_lambda(array(&$_gthis, &$args, &$method), "ufront_api_UFAsyncApi_0"), 'execute');
		$returnError = array(new _hx_lambda(array(&$pos, &$remotingCallString), "ufront_api_UFAsyncApi_1"), 'execute');
		$tmp5 = $flags & 1 << ufront_api_ApiReturnType::$ARTVoid->index;
		if($tmp5 !== 0) {
			try {
				call_user_func($callApi);
				$tmp6 = tink_core_Outcome::Success(null);
				{
					$tmp2 = tink_core__Future_Future_Impl_::sync($tmp6);
					$GLOBALS['%s']->pop();
					return $tmp2;
				}
			}catch(Exception $__hx__e) {
				$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
				$e1 = $_ex_;
				{
					$GLOBALS['%e'] = (new _hx_array(array()));
					while($GLOBALS['%s']->length >= $__hx__spos) {
						$GLOBALS['%e']->unshift($GLOBALS['%s']->pop());
					}
					$GLOBALS['%s']->push($GLOBALS['%e'][0]);
					{
						$tmp2 = call_user_func_array($returnError, array($e1));
						$GLOBALS['%s']->pop();
						return $tmp2;
					}
				}
			}
		} else {
			$tmp7 = null;
			if(($flags & 1 << ufront_api_ApiReturnType::$ARTFuture->index) !== 0) {
				$tmp7 = ($flags & 1 << ufront_api_ApiReturnType::$ARTOutcome->index) !== 0;
			} else {
				$tmp7 = false;
			}
			if($tmp7) {
				try {
					$surprise = call_user_func($callApi);
					{
						$tmp2 = tink_core__Future_Future_Impl_::map($surprise, array(new _hx_lambda(array(&$pos, &$remotingCallString), "ufront_api_UFAsyncApi_2"), 'execute'), null);
						$GLOBALS['%s']->pop();
						return $tmp2;
					}
				}catch(Exception $__hx__e) {
					$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
					$e2 = $_ex_;
					{
						$GLOBALS['%e'] = (new _hx_array(array()));
						while($GLOBALS['%s']->length >= $__hx__spos) {
							$GLOBALS['%e']->unshift($GLOBALS['%s']->pop());
						}
						$GLOBALS['%s']->push($GLOBALS['%e'][0]);
						{
							$tmp2 = call_user_func_array($returnError, array($e2));
							$GLOBALS['%s']->pop();
							return $tmp2;
						}
					}
				}
			} else {
				$tmp11 = $flags & 1 << ufront_api_ApiReturnType::$ARTFuture->index;
				if($tmp11 !== 0) {
					try {
						$future = call_user_func($callApi);
						{
							$tmp2 = tink_core__Future_Future_Impl_::map($future, array(new _hx_lambda(array(), "ufront_api_UFAsyncApi_3"), 'execute'), null);
							$GLOBALS['%s']->pop();
							return $tmp2;
						}
					}catch(Exception $__hx__e) {
						$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
						$e3 = $_ex_;
						{
							$GLOBALS['%e'] = (new _hx_array(array()));
							while($GLOBALS['%s']->length >= $__hx__spos) {
								$GLOBALS['%e']->unshift($GLOBALS['%s']->pop());
							}
							$GLOBALS['%s']->push($GLOBALS['%e'][0]);
							{
								$tmp2 = call_user_func_array($returnError, array($e3));
								$GLOBALS['%s']->pop();
								return $tmp2;
							}
						}
					}
				} else {
					$tmp12 = $flags & 1 << ufront_api_ApiReturnType::$ARTOutcome->index;
					if($tmp12 !== 0) {
						try {
							$outcome = call_user_func($callApi);
							$tmp13 = $outcome->index;
							switch($tmp13) {
							case 0:{
								$tmp14 = tink_core_Outcome::Success(_hx_deref($outcome)->params[0]);
								{
									$tmp2 = tink_core__Future_Future_Impl_::sync($tmp14);
									$GLOBALS['%s']->pop();
									return $tmp2;
								}
							}break;
							case 1:{
								$tmp15 = ufront_remoting_RemotingError::RApiFailure($remotingCallString, _hx_deref($outcome)->params[0]);
								$tmp16 = ufront_web_HttpError::remotingError($tmp15, $pos);
								$tmp17 = tink_core_Outcome::Failure($tmp16);
								{
									$tmp2 = tink_core__Future_Future_Impl_::sync($tmp17);
									$GLOBALS['%s']->pop();
									return $tmp2;
								}
							}break;
							}
						}catch(Exception $__hx__e) {
							$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
							$e4 = $_ex_;
							{
								$GLOBALS['%e'] = (new _hx_array(array()));
								while($GLOBALS['%s']->length >= $__hx__spos) {
									$GLOBALS['%e']->unshift($GLOBALS['%s']->pop());
								}
								$GLOBALS['%s']->push($GLOBALS['%e'][0]);
								{
									$tmp2 = call_user_func_array($returnError, array($e4));
									$GLOBALS['%s']->pop();
									return $tmp2;
								}
							}
						}
					} else {
						try {
							$result1 = call_user_func($callApi);
							$tmp18 = tink_core_Outcome::Success($result1);
							{
								$tmp2 = tink_core__Future_Future_Impl_::sync($tmp18);
								$GLOBALS['%s']->pop();
								return $tmp2;
							}
						}catch(Exception $__hx__e) {
							$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
							$e5 = $_ex_;
							{
								$GLOBALS['%e'] = (new _hx_array(array()));
								while($GLOBALS['%s']->length >= $__hx__spos) {
									$GLOBALS['%e']->unshift($GLOBALS['%s']->pop());
								}
								$GLOBALS['%s']->push($GLOBALS['%e'][0]);
								{
									$tmp2 = call_user_func_array($returnError, array($e5));
									$GLOBALS['%s']->pop();
									return $tmp2;
								}
							}
						}
					}
				}
			}
		}
		$GLOBALS['%s']->pop();
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static function getAsyncApi($syncApi) {
		$GLOBALS['%s']->push("ufront.api.UFAsyncApi::getAsyncApi");
		$__hx__spos = $GLOBALS['%s']->length;
		$meta = haxe_rtti_Meta::getType($syncApi);
		if($meta->asyncApi !== null) {
			$asyncApiName = $meta->asyncApi[0];
			if($asyncApiName !== null) {
				$tmp = Type::resolveClass($asyncApiName);
				$GLOBALS['%s']->pop();
				return $tmp;
			}
		}
		{
			$GLOBALS['%s']->pop();
			return null;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'ufront.api.UFAsyncApi'; }
}
function ufront_api_UFAsyncApi_0(&$_gthis, &$args, &$method) {
	{
		$GLOBALS['%s']->push("ufront.api.UFAsyncApi::_makeApiCall@97");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp2 = Reflect::field($_gthis->api, $method);
		{
			$tmp = Reflect::callMethod($_gthis->api, $tmp2, $args);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
}
function ufront_api_UFAsyncApi_1(&$pos, &$remotingCallString, $e) {
	{
		$GLOBALS['%s']->push("ufront.api.UFAsyncApi::_makeApiCall@100");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp3 = haxe_CallStack::exceptionStack();
		$stack = haxe_CallStack::toString($tmp3);
		$remotingError = ufront_remoting_RemotingError::RServerSideException($remotingCallString, $e, $stack);
		$tmp4 = ufront_web_HttpError::remotingError($remotingError, $pos);
		{
			$tmp = ufront_core_SurpriseTools::asBadSurprise($tmp4);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
}
function ufront_api_UFAsyncApi_2(&$pos, &$remotingCallString, $result) {
	{
		$GLOBALS['%s']->push("ufront.api.UFAsyncApi::_makeApiCall@116");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp8 = $result->index;
		switch($tmp8) {
		case 0:{
			$tmp = tink_core_Outcome::Success(_hx_deref($result)->params[0]);
			$GLOBALS['%s']->pop();
			return $tmp;
		}break;
		case 1:{
			$tmp9 = ufront_remoting_RemotingError::RApiFailure($remotingCallString, _hx_deref($result)->params[0]);
			$tmp10 = ufront_web_HttpError::remotingError($tmp9, $pos);
			{
				$tmp = tink_core_Outcome::Failure($tmp10);
				$GLOBALS['%s']->pop();
				return $tmp;
			}
		}break;
		}
		$GLOBALS['%s']->pop();
	}
}
function ufront_api_UFAsyncApi_3($data) {
	{
		$GLOBALS['%s']->push("ufront.api.UFAsyncApi::_makeApiCall@126");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = tink_core_Outcome::Success($data);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
}
