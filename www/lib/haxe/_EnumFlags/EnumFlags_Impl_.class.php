<?php

// Generated by Haxe 3.3.0
class haxe__EnumFlags_EnumFlags_Impl_ {
	public function __construct(){}
	static function _new($i = null) {
		$GLOBALS['%s']->push("haxe._EnumFlags.EnumFlags_Impl_::_new");
		$__hx__spos = $GLOBALS['%s']->length;
		if($i === null) {
			$i = 0;
		}
		{
			$tmp = $i;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function has($this1, $v) {
		$GLOBALS['%s']->push("haxe._EnumFlags.EnumFlags_Impl_::has");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = ($this1 & 1 << $v->index) !== 0;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function set($this1, $v) {
		$GLOBALS['%s']->push("haxe._EnumFlags.EnumFlags_Impl_::set");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1 |= 1 << $v->index;
		$GLOBALS['%s']->pop();
	}
	static function hunset($this1, $v) {
		$GLOBALS['%s']->push("haxe._EnumFlags.EnumFlags_Impl_::unset");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1 &= 268435455 - (1 << $v->index);
		$GLOBALS['%s']->pop();
	}
	static function ofInt($i) {
		$GLOBALS['%s']->push("haxe._EnumFlags.EnumFlags_Impl_::ofInt");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $i;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function toInt($this1) {
		$GLOBALS['%s']->push("haxe._EnumFlags.EnumFlags_Impl_::toInt");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$GLOBALS['%s']->pop();
			return $this1;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'haxe._EnumFlags.EnumFlags_Impl_'; }
}
