<?php

// Generated by Haxe 3.3.0
class haxe_ds__HashMap_HashMap_Impl_ {
	public function __construct(){}
	static function _new() {
		$GLOBALS['%s']->push("haxe.ds._HashMap.HashMap_Impl_::_new");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1 = new haxe_ds__HashMap_HashMapData();
		{
			$tmp = $this1;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function set($this1, $k, $v) {
		$GLOBALS['%s']->push("haxe.ds._HashMap.HashMap_Impl_::set");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = $k->hashCode();
		$this1->keys->set($tmp, $k);
		$tmp1 = $k->hashCode();
		$this1->values->set($tmp1, $v);
		$GLOBALS['%s']->pop();
	}
	static function get($this1, $k) {
		$GLOBALS['%s']->push("haxe.ds._HashMap.HashMap_Impl_::get");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = $k->hashCode();
		{
			$tmp2 = $this1->values->get($tmp);
			$GLOBALS['%s']->pop();
			return $tmp2;
		}
		$GLOBALS['%s']->pop();
	}
	static function exists($this1, $k) {
		$GLOBALS['%s']->push("haxe.ds._HashMap.HashMap_Impl_::exists");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = $k->hashCode();
		{
			$tmp2 = $this1->values->exists($tmp);
			$GLOBALS['%s']->pop();
			return $tmp2;
		}
		$GLOBALS['%s']->pop();
	}
	static function remove($this1, $k) {
		$GLOBALS['%s']->push("haxe.ds._HashMap.HashMap_Impl_::remove");
		$__hx__spos = $GLOBALS['%s']->length;
		$tmp = $k->hashCode();
		$this1->values->remove($tmp);
		$tmp1 = $k->hashCode();
		{
			$tmp2 = $this1->keys->remove($tmp1);
			$GLOBALS['%s']->pop();
			return $tmp2;
		}
		$GLOBALS['%s']->pop();
	}
	static function keys($this1) {
		$GLOBALS['%s']->push("haxe.ds._HashMap.HashMap_Impl_::keys");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->keys->iterator();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function iterator($this1) {
		$GLOBALS['%s']->push("haxe.ds._HashMap.HashMap_Impl_::iterator");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->values->iterator();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return 'haxe.ds._HashMap.HashMap_Impl_'; }
}
