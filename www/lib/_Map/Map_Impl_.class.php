<?php

// Generated by Haxe 3.3.0
class _Map_Map_Impl_ {
	public function __construct(){}
	static function set($this1, $key, $value) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::set");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1->set($key, $value);
		$GLOBALS['%s']->pop();
	}
	static function get($this1, $key) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::get");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->get($key);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function exists($this1, $key) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::exists");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->exists($key);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function remove($this1, $key) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::remove");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->remove($key);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function keys($this1) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::keys");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->keys();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function iterator($this1) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::iterator");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->iterator();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function toString($this1) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::toString");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this1->toString();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function arrayWrite($this1, $k, $v) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::arrayWrite");
		$__hx__spos = $GLOBALS['%s']->length;
		$this1->set($k, $v);
		{
			$GLOBALS['%s']->pop();
			return $v;
		}
		$GLOBALS['%s']->pop();
	}
	static function toStringMap($t) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::toStringMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = new haxe_ds_StringMap();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function toIntMap($t) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::toIntMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = new haxe_ds_IntMap();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function toEnumValueMapMap($t) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::toEnumValueMapMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = new haxe_ds_EnumValueMap();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function toObjectMap($t) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::toObjectMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = new haxe_ds_ObjectMap();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function fromStringMap($map) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::fromStringMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $map;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function fromIntMap($map) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::fromIntMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $map;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	static function fromObjectMap($map) {
		$GLOBALS['%s']->push("_Map.Map_Impl_::fromObjectMap");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $map;
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	function __toString() { return '_Map.Map_Impl_'; }
}
