<?php

// Generated by Haxe 3.3.0
class control_HomeController extends ufront_web_Controller {
	public function __construct() {
		if(!php_Boot::$skip_constructor) {
		$GLOBALS['%s']->push("control.HomeController::new");
		$__hx__spos = $GLOBALS['%s']->length;
		parent::__construct();
		$GLOBALS['%s']->pop();
	}}
	public $testApi;
	public function index() {
		$GLOBALS['%s']->push("control.HomeController::index");
		$__hx__spos = $GLOBALS['%s']->length;
		$obj = _hx_anonymous(array());
		$this1 = null;
		if($obj !== null) {
			$this1 = $obj;
		} else {
			$this1 = _hx_anonymous(array());
		}
		{
			$tmp = new ufront_web_result_ViewResult(ufront_view__TemplateData_TemplateData_Impl_::setObject($this1, _hx_anonymous(array("title" => "simple"))), "index", null);
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	public $partial;
	public function execute_partial() {
		$GLOBALS['%s']->push("control.HomeController::execute_partial");
		$__hx__spos = $GLOBALS['%s']->length;
		{
			$tmp = $this->context->injector->_instantiate(_hx_qtype("control.PartialController"))->execute();
			$GLOBALS['%s']->pop();
			return $tmp;
		}
		$GLOBALS['%s']->pop();
	}
	public function execute() {
		$GLOBALS['%s']->push("control.HomeController::execute");
		$__hx__spos = $GLOBALS['%s']->length;
		$uriParts = $this->context->actionContext->get_uriParts();
		$this->context->request->get_params();
		$this->context->request->get_httpMethod();
		$this->context->actionContext->controller = $this;
		$this->context->actionContext->action = "execute";
		try {
			$tmp = 0 === $uriParts->length;
			if($tmp) {
				$this->context->actionContext->action = "index";
				$this->context->actionContext->args = (new _hx_array(array()));
				$this->context->actionContext->get_uriParts()->splice(0, 0);
				$i = haxe_rtti_Meta::getFields(_hx_qtype("control.HomeController"))->index->wrapResult[0];
				$wrappingRequired = $i;
				$tmp1 = $this->index();
				$result = $this->wrapResult($tmp1, $wrappingRequired);
				$this->setContextActionResultWhenFinished($result);
				{
					$GLOBALS['%s']->pop();
					return $result;
				}
			} else {
				$tmp2 = null;
				if(1 <= $uriParts->length) {
					$tmp2 = $uriParts[0] === "partial";
				} else {
					$tmp2 = false;
				}
				if($tmp2) {
					$this->context->actionContext->action = "execute_partial";
					$this->context->actionContext->args = (new _hx_array(array()));
					$this->context->actionContext->get_uriParts()->splice(0, 1);
					$i1 = haxe_rtti_Meta::getFields(_hx_qtype("control.HomeController"))->execute_partial->wrapResult[0];
					$wrappingRequired1 = $i1;
					$tmp3 = $this->execute_partial();
					$result1 = $this->wrapResult($tmp3, $wrappingRequired1);
					$this->setContextActionResultWhenFinished($result1);
					{
						$GLOBALS['%s']->pop();
						return $result1;
					}
				}
			}
			throw new HException(ufront_web_HttpError::pageNotFound(_hx_anonymous(array("fileName" => "HomeController.hx", "lineNumber" => 10, "className" => "control.HomeController", "methodName" => "execute"))));
		}catch(Exception $__hx__e) {
			$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
			$e = $_ex_;
			{
				$GLOBALS['%e'] = (new _hx_array(array()));
				while($GLOBALS['%s']->length >= $__hx__spos) {
					$GLOBALS['%e']->unshift($GLOBALS['%s']->pop());
				}
				$GLOBALS['%s']->push($GLOBALS['%e'][0]);
				$tmp4 = Std::string($this->context->actionContext->controller);
				{
					$tmp = ufront_core_SurpriseTools::asSurpriseError($e, "Uncaught error while executing " . _hx_string_or_null($tmp4) . "." . _hx_string_or_null($this->context->actionContext->action) . "()", _hx_anonymous(array("fileName" => "HomeController.hx", "lineNumber" => 10, "className" => "control.HomeController", "methodName" => "execute")));
					$GLOBALS['%s']->pop();
					return $tmp;
				}
			}
		}
		$GLOBALS['%s']->pop();
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static function __meta__() { $args = func_get_args(); return call_user_func_array(self::$__meta__, $args); }
	static $__meta__;
	function __toString() { return 'control.HomeController'; }
}
control_HomeController::$__meta__ = _hx_anonymous(array("obj" => _hx_anonymous(array("rtti" => (new _hx_array(array((new _hx_array(array("testApi", "AsyncTestApi", "")))))), "viewFolder" => (new _hx_array(array("home"))))), "fields" => _hx_anonymous(array("index" => _hx_anonymous(array("wrapResult" => (new _hx_array(array(3))))), "execute_partial" => _hx_anonymous(array("wrapResult" => (new _hx_array(array(0)))))))));
